How the program was written:
Memory utilization was calculated using <sys/sysinfo.h>, namely using variables totalram and freeram of struct sysinfo.
Used ram is equal to totalram - freeram. 

CPU utilization was calculated by going to /proc/stat and dividing the idle time by the total time of the CPU.
Since the times in /proc/stat are total times since the computer has started, the values of total time and idle time
for the last sample are kept and subtracted from the current sample to get the actual change in time.
https://www.linuxhowtos.org/System/procstat.htm was used to understand the values in /proc/stat

Number of CPUs was calculated by going to /sys/devices/system/cpu and iterating through the cpu0, cpu1, ..., 
located there to find the max cpu number.

Max frequency was calculated by reading the value stored at
/sys/devices/system/cpu/cpu0/cpufreq/cpuinfo_max_freq and converting from Khz to Ghz.

To add the tdelay between each sample, usleep() was utilized.
There was a warning when compiling with -std=c99 so added #define _DEFAULT_SOURCE
as stated in https://man7.org/linux/man-pages/man3/usleep.3.html.

**Functions:**




How To Use Program:
1. gcc myMonitoringTool -std=c99 -Wall -Werror -o myMonitoringTool
2. ./myMonitoringTool  [samples [tdelay]] [--memory] [--cpu] [--cores] [--samples=N] [--tdelay=T]
Notes
Same arguments can be used. ie ./myMonitoringTool --cpu --cpu
The rightmost values will be used. ie ./myMonitoringTool 20 --samples=30 will run the program with samples = 30
Another example, ./myMonitoringTool --tdelay=2000 --tdelay=1000 will run the program with tdelay = 1000
